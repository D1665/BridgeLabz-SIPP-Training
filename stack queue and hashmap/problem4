class CustomHashMap<K, V> {
    private static class Entry<K, V> {
        K key;
        V value;
        Entry<K, V> next;

        Entry(K key, V value) {
            this.key = key;
            this.value = value;
        }
    }

    private final int SIZE = 16;
    private Entry<K, V>[] table = new Entry[SIZE];

    public void put(K key, V value) {
        int hash = Math.abs(key.hashCode() % SIZE);
        Entry<K, V> newEntry = new Entry<>(key, value);

        if (table[hash] == null) {
            table[hash] = newEntry;
        } else {
            Entry<K, V> current = table[hash];
            while (current != null) {
                if (current.key.equals(key)) {
                    current.value = value;
                    return;
                }
                if (current.next == null) break;
                current = current.next;
            }
            current.next = newEntry;
        }
    }

    public V get(K key) {
        int hash = Math.abs(key.hashCode() % SIZE);
        Entry<K, V> current = table[hash];
        while (current != null) {
            if (current.key.equals(key)) return current.value;
            current = current.next;
        }
        return null;
    }
